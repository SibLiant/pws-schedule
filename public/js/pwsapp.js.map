{"version":3,"sources":["pwsnamespace.js","pwscore.js","pwsrender.js","pwsworker.js","pwsworkercollection.js"],"names":[],"mappingsxzKA","file":"pwsapp.js","sourcesContent":["var PWSSchedule = PWSSchedule || {};\n\nPWSSchedule.createNS = function (namespace) {\n    var nsparts = namespace.split(\".\");\n    var parent = PWSSchedule;\n \n    // we want to be able to include or exclude the root namespace so we strip\n    // it if it's in the namespace\n    if (nsparts[0] === \"PWSSchedule\") {\n        nsparts = nsparts.slice(1);\n    }\n \n    // loop through the parts and create a nested namespace if necessary\n    for (var i = 0; i < nsparts.length; i++) {\n        var partname = nsparts[i];\n        // check if the current parent already has the namespace declared\n        // if it isn't, then create it\n        if (typeof parent[partname] === \"undefined\") {\n            parent[partname] = {};\n        }\n        // get a reference to the deepest element in the hierarchy so far\n        parent = parent[partname];\n    }\n    // the parent is now constructed with empty namespaces and can be used.\n    // we return the outermost namespace\n    return parent;\n};\n","/*global PWSSchedule, moment */\nPWSSchedule.core = function(options){\n\t\"use strict\";\n//todo: on cal nav project is not highlighted when cal redraws\t\n\tvar scheduleWorkers = options.workerRecords;\n\tvar config = {\n\t\t\"momCalStart\": moment( options.calendarRange.start ),\n\t\t\"momCalEnd\": moment( options.calendarRange.end ),\n\t\t\"pwsDateFormat\": 'YYYY-MM-DD',\n\t\t\"headerDateFormat\": 'ddd MMM D',\n\t\t\"navBackward\": options.settings.navBackward,\n\t\t\"navForward\": options.settings.navForward,\n\t\t\"navRootUrl\": options.settings.navRootUrl,\n\t\t\"calendarName\": options.settings.name,\n\t\t\"calendarId\": options.settings.id\n\t};\n\n\tconfig.calRangeInt = config.momCalEnd.diff( config.momCalStart, \"days\" );\n\n\tvar scheduleRecordsByWorkerId = (function(){\n\t\tvar proj = [];\n\t\t$.each(options.scheduleRecords, function(k,v) {\n\t\t\tif ( ! proj.hasOwnProperty(v.worker_id) ) { proj[v.worker_id] = []; }\n\t\t\tproj[v.worker_id].push(v);\n\t\t});\n\t\treturn proj;\n\t})();\n\n\tvar workers = (function (){\n\t\tvar wrk = {};\n\t\t$.each(scheduleWorkers, function( index, value ) {\n\t\t\tvar obj = new PWSSchedule.worker(value.worker_id, value.worker_name, scheduleRecordsByWorkerId[value.worker_id]);\n\t\t\twrk[index] =  obj;\n\t\t});\n\t\treturn wrk;\n\t})();\n\n\treturn {\n\t\toptions:options,\n\t\tconfig:config,\n\t\tscheduleRecordsByWorkerId:scheduleRecordsByWorkerId,\n\t\tworkers:workers\n\t};\n \n};\n","/*global PWSSchedule, moment, crfs,_,Cookies */\n/*exported  getCalStart, getCalRange, setCalStart */\n/* jshint unused:false */\nPWSSchedule.render = function( core ){\n\t\"use strict\";\n\n\n\tvar projectSelected = {};\n\tvar hdrTarget = null;\n\n\tvar bldGridHeader = function(targetElement){\n\t\t//clear any existing elements\n\n\t\tif ( targetElement ){\n\t\t\thdrTarget = ( targetElement instanceof jQuery ) ? targetElement : $( targetElement );\n\t\t}\n\n\t\tvar hdrdivs = [];\n\t\t$('div.hdr-row').html('');\n\n\t\t//build the controls first\n\t\t//hdrdivs.push('<div id=\"name-placeholder\"> <a href=\"#\" id=\"cal-ctrl-back\" class=\"btn\"><</a> &nbsp; &nbsp; <a href=\"#\" id=\"cal-ctrl-forward\" class=\"btn\">></a> </div>');\n\t\thdrdivs.push('<div id=\"name-placeholder\"> <button id=\"cal-ctrl-back\" type=\"button\" class=\"btn btn-default btn-sm\"> <span  class=\"glyphicon glyphicon-arrow-left\" aria-hidden=\"true\"></span></button>&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;<button type=\"button\" id=\"cal-ctrl-forward\" class=\"btn btn-default btn-sm\"><span class=\"glyphicon glyphicon-arrow-right\" aria-hidden=\"true\"></span></button></div>');\n\t\tvar i;\t\t\t\t\t\t\n\n\t\tfor(i=0; i < core.config.calRangeInt; i++){\n\t\t\tvar dy = core.config.momCalStart.clone().add(i, 'days');\n\t\t\tvar cls = ( isWeekend(dy) ) ? 'cnt-hdr-date weekend' :  'cnt-hdr-date';\n\t\t\thdrdivs.push('<div class=\"'+cls+'\">'+ core.config.momCalStart.clone().add(i, 'days').format(core.config.headerDateFormat)+' </div>');\n\t\t}\n\t\thdrTarget.append(hdrdivs);\n\t\tsetCalendarName();\n\t};\n\n\tvar isWeekend = function(mom){\n\t\t\n\t\treturn (  mom.weekday() === 0 || mom.weekday() === 6 ) ? true : false;\n\n\t};\n\n\tvar initScheduleRecords = function(){\n\t\tvar rws;\n\t\t$.each(core.workers, function( workerIndex, worker ) {\n\t\t\tbuildWorkerDays( worker.id );\n\t\t\trws = worker.buildRows(core.config.momCalStart, core.config.calRangeInt);\n\t\t\t$.each(rws, function( rowIndex, row ) {\n\t\t\t\trenderWorkerRow( worker.id, row  );\n\t\t\t});\n\t\t\tbindDragDrop(worker.id);\n\t\t});\n\t};\n\n\tvar renderWorkerScheduleElements = function(workerId, clearExisting){\n\n\t\tif ( clearExisting ) {\n\t\t\tclearWorkerScheduleElements(workerId);\n\t\t}\n\n\t\tvar worker = core.workers[workerId];\n\t\tvar rws = worker.buildRows(core.config.momCalStart, core.config.calRangeInt);\n\t\t$.each(rws, function( rowIndex, row ) {\n\t\t\trenderWorkerRow( worker.id, row  );\n\t\t});\n\n\t\tbindDragDrop(workerId);\n\n\t};\n\n\tvar reRender = function(){\n\t\tbldGridHeader();\n\t\tinitScheduleRecords();\n\t\tctrlBind();\n\n\t\tvar scrollHeader = document.getElementById('cnt-scroll-header');\n\t\tvar scrollWorkers = document.getElementById('calendar-workers-scrollable');\n\t\tvar scrollWkGrids = document.getElementById('cnt-worker-grids');\n\t\tif ( scrollHeader  ) { scrollHeader.scrollLeft = 0; }\n\t\tif ( scrollWorkers ) { scrollWorkers.scrollLeft = 0; }\n\t\tif ( scrollWkGrids ) { scrollWkGrids.scrollLeft = 0; }\n\n\t};\n\n\tvar navCal = function(direction, days){\n\t\tif ( core.config.navRootUrl ) { \n\t\t\tcalNavRootUrl(direction); \n\t\t}\n\t\tif ( direction === 'forward' ) {\n\t\t\tcore.config.momCalStart.add( days, 'days' );\n\t\t\tcore.config.momCalEnd.add( days, 'days' );\n\t\t}\n\n\t\tif ( direction === 'backward' ) {\n\t\t\tcore.config.momCalStart.subtract( days, 'days' );\n\t\t\tcore.config.momCalEnd.subtract( days, 'days' );\n\t\t}\n\t\treRender();\n\t};\n\n\tvar calNavRootUrl = function(direction){\n\n\t\tvar newTargetDate;\n\t\tif ( direction === \"forward\" ) {\n\t\t\tnewTargetDate = core.config.momCalStart.clone().add( core.config.navForward, 'days' );\n\t\t}\n\t\telse { //backward\n\t\t\tnewTargetDate = core.config.momCalStart.clone().subtract( core.config.navBackward, 'days' );\n\t\t}\n\n\t\tvar url = core.config.navRootUrl + '/' + newTargetDate.format( core.config.pwsDateFormat );\n\t\twindow.location = url;\n\t\tthrow new Error( 'Redirecting' );\n\n\t};\n\n\tvar clearWorkerScheduleElements = function(worker_id){\n\t\tvar momStart = core.config.momCalStart.clone();\n\t\tvar rng = core.config.calRangeInt;\n\t\tfor (var i = 0; i < rng; i++) { \n\t\t\tvar select = bldDaySelector(worker_id, momStart.clone().add(i, 'days'));\n\t\t\t$(select).html('');\n\t\t}\n\n\t};\n\n\tvar clearWorkerDayDivs = function(worker_id){\n\t\t//var select = $('#worker-row_'+worker_id).html('');\n\t\tvar select = $('#worker-row_'+worker_id).children();\n\t\t$.each(select, function( index, value ) {\n\t\t\tif ( $(value).hasClass('worker-day')  ) { $(value).remove(); }\n\t\t});\n\n\t};\n\n\tvar renderWorkerRow = function(worker_id, wRow){\n\n\t\tvar momPrevProj = core.config.momCalStart.clone();\n\t\tvar rlen = wRow.length;\n\t\tvar dDiff;\n\t\tfor (var i = 0; i < rlen; i++) { \n\t\t\tvar momCurrentProj = moment( wRow[i].scheduled_date );\n\t\t\tdDiff = momCurrentProj.diff( momPrevProj, 'days');\n\n\t\t\tif (  dDiff > 0 ) { renderPlaceHolder(worker_id, momPrevProj, dDiff);}\n\t\t\trenderWorkerProj(worker_id, wRow[i]);\n\t\t\tmomPrevProj = moment( wRow[i].scheduled_date ).add( wRow[i].job_length_days, 'days' );\n\t\t}\n\t\tdDiff = core.config.momCalEnd.diff( momPrevProj, 'days' );\n\t\tif (  dDiff > 0   )  { \n\t\t\trenderPlaceHolder(worker_id, momPrevProj, dDiff);\n\t\t}\n\t};\n\n\tvar renderPlaceHolder = function(worker_id, start, days){\n\t\tvar momStart =  ( moment.isMoment(start) ) ? start.clone() : moment( start );\n\t\tvar proj;\n\t\tvar selector;\n\t\tvar cls;\n\t\tdays = ( ! days ) ? 1 : days;\n\t\tif ( days === 1 ){\n\t\t\tcls = \"place-holder_\"+ worker_id + \"_\"+ momStart.format(core.config.pwsDateFormat);\n\t\t\tproj = '<div class=\"cnt-project place-holder '+cls+'\"> place holder</div>';\n\t\t\tselector = bldDaySelector(worker_id, momStart);\n\t\t\t$( selector ).append(proj);\n\t\t}\n\t\telse {\n\t\t\tfor( var u=0; u<days;u++){\n\t\t\t\tvar momStartClone = momStart.clone();\n\t\t\t\tvar tDay = momStartClone.add(u, 'days').format(core.config.pwsDateFormat);\n\t\t\t\tvar classDt = 'place-holder_' + worker_id + '_' + tDay;\n\t\t\t\tproj = '<div class=\"cnt-project place-holder '+classDt+'\"> place holder</div>';\n\t\t\t\tselector = bldDaySelector(worker_id, tDay);\n\t\t\t\t$( selector ).append(proj);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar renderWorkerProj = function(worker_id, scheduleRecord){\n\t\tvar dys = parseInt(scheduleRecord.job_length_days);\n\t\tvar momentDrawDay;\n\t\tfor(var j=0;j<dys;j++){\n\t\t\t// we need to determin what class to apply to the project so the \n\t\t\t// project appears to span days nicely \n\t\t\tvar cls;\n\t\t\tif (dys === 1) { cls = \"proj-single\"; }\n\t\t\telse if (j === 0) { cls = \"proj-begin\"; }\n\t\t\telse if (  j > 0 && j+1 < dys ) { cls = \"proj-mid\"; }\n\t\t\telse if ( j + 1 === dys ) { cls = \"proj-end\"; }\n\n\t\t\tvar id = 'schedule-id_'+scheduleRecord.schedule_id+'_dy_'+ Math.abs(j+1);\n\t\t\t//verfiy if we have a sane project id\n\n\t\t\tvar proj = '<div class=\"proj-draggable cnt-project '+cls+'\" id=\"'+id+'\"> <span class=\"proj-name\">'+scheduleRecord.customer_name+'</span><span class=\"proj-cust-name\"></span></div>';\n\t\t\tmomentDrawDay = moment(scheduleRecord.scheduled_date).add(j, 'days');\n\n\t\t\tvar selector = bldDaySelector(worker_id, momentDrawDay.format(core.config.pwsDateFormat));\n\n\t\t\t$( selector ).append(proj);\n\t\t\t$('#'+id).data('scheduleRecord', scheduleRecord );\n\n\t\t}\n\t\t//return the last draw day so we can look at the next record and determine\n\t\t//if we need to add invisable place holders to keep a nice cal format\n\t\treturn momentDrawDay;\n\t};\n\n\tvar bldDaySelector = function(worker_id, day){\n\t\tvar mom =  ( moment.isMoment(day) ) ? day.clone() : moment( day );\n\t\treturn '#worker-id_'+worker_id+'_day_'+mom.format(core.config.pwsDateFormat);\n\t};\n\n\tvar  initWorkerDivs = function(targetElement){\n\t\tvar jqObjTarget = ( targetElement instanceof jQuery ) ? targetElement : $( targetElement );\n\t\tvar workerDivs = [];\n\t\t$.each(core.workers, function( index, value ) {\n\t\t\tbuildWorkerDiv(value.id, value.name, jqObjTarget);\n\t\t});\n\t};\n\n\tvar setCalendarName = function(){\n\n\t\t$('#calendar-name').html(core.config.calendarName);\n\n\n\t};\n\n\tvar buildWorkerDiv = function(worker_id, worker_name, targetElement){\n\t\t//var jqObjTarget = ( targetElement instanceof jQuery ) ? targetElement : $( targetElement );\n\t\ttargetElement = $( targetElement );\n\t\tvar workerDivs = [];\n\n\t\tvar workerCntId = 'worker-row_'+ worker_id;\n\t\tvar divString = '<div class=\"worker-row\" id=\"'+workerCntId+'\"> <div class=\"worker-name\">'+worker_name+'</div> </div> <!-- worker-row -->\t';\n\t\ttargetElement.append(divString);\n\t\t\n\t\t//build day containers\n\t\tbuildWorkerDays( worker_id);\n\t};\n\n\tvar buildWorkerDays = function(worker_id){\n\t\tvar daysDivs = [];\n\t\tclearWorkerDayDivs( worker_id );\n\t\tfor(var i = 0; i < core.config.calRangeInt; i++){\n\n\t\t\tvar dy = core.config.momCalStart.clone().add(i, 'days');\n\t\t\tvar cls = ( isWeekend(dy) ) ? 'weekend' :  '';\n\t\t\tdaysDivs.push('<div class=\"proj-droppable worker-day '+cls+'\" id=\"worker-id_'+worker_id+'_day_'+ core.config.momCalStart.clone().add(i, 'days').format(core.config.pwsDateFormat)+'\"> </div>');\n\t\t}\n\t\t$('#worker-row_'+worker_id).append(daysDivs);\n\t};\n\n\tvar updateSelectedProject = function(newRec) {\n\n\t\tif ( ! newRec ) {\n\t\t\tsetProjUnselected();\t\n\t\t\treturn;\n\t\t}\n\n\t\tsetProjUnselected();\n\t\tsetProjSelected( newRec );\n\t\tupdateSelectedProjectDisplay();\n\t\trenderButtons();\n\t};\n\n\tvar setProjUnselected = function(){\n\t\tprojectSelected = {};\n\t\t$('#selected-project').html('');\n\t\t$('#project-controls').html('');\n\t\t$('#calendar-workers-scrollable').find('.proj-selected').removeClass('proj-selected');\n\t};\n\n\tvar setProjSelected = function(p){\n\t\tfor (var i = 0; i < p.job_length_days; i ++) {\n\t\t\tvar select =  '#schedule-id_'+p.schedule_id+'_dy_'+ Math.abs(i+1);\n\t\t\t$( select ).addClass('proj-selected');\n\t\t}\n\t\tprojectSelected = p;\n\t\treturn p;\n\t};\n\n\tvar updateSelectedProjectDisplay = function (){\n\n\t\t$('#selected-project').html('');\n\t\tvar proj = '<li id=\"selected-proj-li\" class=\"proj-draggable\">'+projectSelected.customer_name+'</li>';\n\t\t$('#selected-project').append(proj);\n\t\t$('#selected-proj-li').data(\"scheduleRecord\", projectSelected );\n\t\tsetTagStyles();\n\t\tbindSelectedProjectDraggable();\n\t\t//ctrlBind();\n\t};\n\n\tvar setTagStyles = function(){\n\t\t\n\t\tif ( _.isEmpty( projectSelected.tags)  ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$.each(projectSelected.tags, function( index, value ) {\n\t\t\trenderTag( value );\n\t\t});\n\t};\n\n\n\tvar renderExistingTagsForEdit = function(){\n\t\t$('#existing-tags').html('');\n\t\tif ( _.isEmpty( projectSelected.tags)  ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$.each(projectSelected.tags, function( index, value ) {\n\t\t\trenderEditTagListElement( value );\n\t\t});\n\n\t\t$('.remove-tag').on(' click ', function(e){\n\t\t\tremoveTag( $(e.target) );\n\t\t});\t\n\n\t};\n\n\tvar bindTagCtrls = function(){\n\t\t$('#btn-add-tag').on(' click ', function(){\n\t\t\tvar tagId = $('#tag-select').val();\n\t\t\taddTag(tagId);\n\t\t});\n\t};\n\n\tvar removeTag = function(btnTarget){\n\t\tvar tagId =  btnTarget.attr(\"id\").match(/\\d+$/);\n\t\ttagId = tagId[0];\n\n\t\t//console.debug('schedule id to remove tag: '+projectSelected.schedule_id);\n\t\t//console.debug('tags id '+tagId);\n\t\tvar jqxhr = $.ajax({\n\t\t\turl: \"/calendar/schedule-element/\"+projectSelected.schedule_id+\"/tag/\"+tagId+\"/remove\",\n\t\t\tasync: true,\n\t\t\tmethod: \"GET\"\n\t\t} )\n\t\t.done(function(newRec) {\n\t\t\tif ( _.isObject( newRec )) {\n\t\t\t\tliveUpdateWorkerRows(projectSelected, newRec);\n\t\t\t\trenderExistingTagsForEdit();\n\n\t\t\t}\n\n\t\t})\n\t\t.fail(function() {\n\t\t\talert( \"error removing tag!\" );\n\t\t});\n\t};\n\n\tvar addTag = function(tagId){\n\n\t\tif ( $('#tag-select').val() === '' ) {\n\t\t\talert('select a tag before trying to add');\n\t\t\treturn;\n\t\t}\n\n\t\tvar jqxhr = $.ajax({\n\t\t\turl: \"/calendar/schedule-element/\"+projectSelected.schedule_id+\"/tag/\"+tagId+\"/add\",\n\t\t\tasync: true,\n\t\t\tmethod: \"GET\"\n\t\t} )\n\t\t.done(function(newRec) {\n\t\t\tif ( _.isObject( newRec )) {\n\t\t\t\tliveUpdateWorkerRows(projectSelected, newRec);\n\t\t\t\trenderExistingTagsForEdit();\n\t\t\t}\n\n\t\t})\n\t\t.fail(function() {\n\t\t\talert( \"error adding tag! does it already exist?\" );\n\t\t});\n\t};\n\n\n\n\tvar renderEditTagListElement = function(tagId){\n\t\tvar tag = core.options.tags[tagId];\n\t\tvar styles = 'border-color: '+tag.border_color+'; background-color: '+tag.background_color+'; ';\n\t\t$('#existing-tags').append('<li><span class=\"tag tag-tooltip\" id=\"tag-id_\"'+tagId+' style=\"'+styles+'\" tooltip=\"'+tag.tool_tip+'\">'+tag.name+'</span>&nbsp;<a href=\"#\" class=\"btn btn-primary btn-xs remove-tag\" id=\"remove-tag_'+tagId+'\">remove</a></li>');\n\t};\n\n\tvar renderTag = function(tagId){\n\t\tvar tag = core.options.tags[tagId];\n\t\tvar styles = 'border-color: '+tag.border_color+'; background-color: '+tag.background_color+'; ';\n\t\t$('#selected-project').append('<li class=\"tag tag-tooltip\" id=\"tag-id_\"'+tagId+' style=\"'+styles+'\" tooltip=\"'+tag.tool_tip+'\">'+tag.abbreviation+'</li>');\n\t};\n\n\tvar parseWorkerDayId = function(id){\n\n\t\tvar stripped = id.substring(10, id.length +1);\n\t\tvar wkId = stripped.match(/^\\d*/g);\n\t\twkId = wkId[0];\n\n\t\tvar dt = id.substring(id.length - 10, id.length);\n\n\t\treturn { workerId:wkId, day: moment(dt) };\n\t};\n\n\tvar liveUpdateWorkerRow = function(newRec) {\n\t\tvar wkr = core.workers[newRec.worker_id];\n\t\twkr.addProjectToPool(newRec);\n\t\trenderWorkerScheduleElements(newRec.worker_id, true);\n\t\tupdateSelectedProject(newRec);\n\t};\n\n\tvar liveUpdateWorkerRows = function(origRec, newRec){\n\n\t\tif( _.isEmpty( origRec ) ) {\n\t\t\tliveUpdateWorkerRow(newRec);\n\t\t\treturn;\n\t\t}\n\n\t\tvar wkr;\n\t\tif ( parseInt( origRec.worker_id ) === parseInt( newRec.worker_id )  ) {\n\t\t\twkr = core.workers[newRec.worker_id];\n\t\t\twkr.removeProjectFromPool(origRec.schedule_id);\n\t\t\twkr.addProjectToPool(newRec);\n\t\t\trenderWorkerScheduleElements(newRec.worker_id, true);\n\n\t\t}\n\t\telse {\n\t\t\twkr = core.workers[newRec.worker_id];\n\t\t\tvar wkrOld = core.workers[origRec.worker_id];\n\t\t\twkrOld.removeProjectFromPool(origRec.schedule_id);\n\t\t\twkr.removeProjectFromPool(origRec.schedule_id);\n\t\t\twkr.addProjectToPool(newRec);\n\t\t\trenderWorkerScheduleElements(newRec.worker_id, true);\n\t\t\trenderWorkerScheduleElements(origRec.worker_id, true);\n\t\t}\n\t\t\n\t\tupdateSelectedProject(newRec);\n\n\t};\n\n\tvar moveScheduleRec = function(scheduleRecord, fieldsObj){\n\t\tvar jqxhr = $.ajax({\n\t\t\turl: \"/RO/schedule/drag-update\",\n\t\t\tasync: true,\n\t\t\tdataType: \"json\",\n\t\t\tdata: {\"_token\":crfs,\"targetRecord\":scheduleRecord, \"updateFields\": fieldsObj},\n\t\t\tmethod: \"POST\"\n\t\t} )\n\t\t.done(function(newRec) {\n\t\t\tliveUpdateWorkerRows(scheduleRecord, newRec);\n\t\t})\n\t\t.fail(function() {\n\t\t\talert( \"error\" );\n\t\t});\n\t};\n\n\tvar renderButtons = function(){\n\n\t\trbUpdate(projectSelected);\n\t\trbRemove(projectSelected);\n\t\trbTags(projectSelected);\n\t\trbExternalLinks(projectSelected);\n\n\t\t\n\t};\n\n\tvar rbExternalLinks = function(proj){\n\n\n\t\t$.each(proj, function( fName, fValue ) {\n\t\t\tif ( fName.substring(0, 14 ) ===\"external_link_\" ) {\n\t\t\t\tvar\tlinkName = fName.substring(14).replace('_', ' ');\n\t\t\t\tvar html = '<li> <a href=\"'+fValue+'\"  target=\"_blank\" class=\"btn btn-info btn-xs\" >'+linkName+'</a></li>';\n\t\t\t\t$('#project-controls').append(html);\n\t\t\t}\n\t\t});\n\t};\n\n\tvar fetchModalAddContent = function(){\n\t\tvar jqxhr = $.ajax({\n\t\t\turl: '/calendar/'+core.config.calendarId+'/schedule-element/user-add',\n\t\t\tasync: true,\n\t\t\tmethod: \"GET\"\n\t\t} )\n\t\t.done(function(response) {\n\t\t\t$('#cal-ctrl').find('.modal-body').html(response)\n\t\t\t\t.find( \"#scheduled-date-field\"  )\n\t\t\t\t.datepicker({dateFormat: \"yy-mm-dd\"});\n\t\t\t$('#cal-ctrl').find(\".modal-title\").html(\"Add Schedule Record\");\n\t\t\t$('#btn-modal-cal-ctrl-submit').show();\n\t\t})\n\t\t.fail(function() {\n\t\t\talert( \"error fetching url data\" );\n\t\t});\n\n\t};\n\n\tvar buildModalContentFilterWorkers = function(){\n\n\t\tvar bdy = $('#cal-ctrl').find('.modal-body');\n\t\t$('#cal-ctrl').find('.modal-title').html('Show Workers -- uncheck workers to hide');\n\t\t$('#btn-modal-cal-ctrl-submit').hide();\n\t\tbdy.html('');\n\t\tvar filteredWorkers = Cookies.getJSON('pws_filtered_workers');\t\n\n\t\tbdy.append('<ul id = \"filtered-workers-list\"></ul>');\n\t\tvar list = $('#filtered-workers-list');\n\t\t$.each(core.workers, function( index, wkr ) {\n\t\t\tvar cid = 'wkr-cb_'+wkr.id;\n\t\t\tlist.append('<li class=\"checkbox\" > <input class=\"fw-checkbox\" id=\"'+cid+'\" type=\"checkbox\" name=\"vehicle\" value=\"'+wkr.id+'\" checked=\"checked\">'+wkr.name+' </li>');\n\t\t\tif ( $.inArray(wkr.id, filteredWorkers) >= 0 ) {\n\t\t\t\t//console.debug(cid);\n\t\t\t\t$('#'+cid).prop('checked', false);\n\t\t\t}\n\n\t\t});\n\n\t\t$('#filtered-workers-list li .fw-checkbox').on(' click ', function(e){\n\t\t\tvar nonCheckedId;\n\t\t\tvar clickedId = $(e.target).attr(\"id\").match(/\\d+$/);\n\t\t\tvar filteredList = [];\n\t\t\t$.each($('.fw-checkbox'), function( index, value ) {\n\t\t\t\tif ( ! $(value).is(':checked')  ){\n\t\t\t\t\tnonCheckedId = $(value).attr(\"id\").match(/\\d+$/);\n\t\t\t\t\tfilteredList.push( parseInt(nonCheckedId[0]));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tCookies.set('pws_filtered_workers', filteredList, {path:''});\n\t\t\tapplyWorkerFilter();\n\n\t\t});\n\t};\n\n\n\tvar buildModalContentFilterTags = function(){\n\n\t\tvar bdy = $('#cal-ctrl').find('.modal-body');\n\t\t$('#cal-ctrl').find('.modal-title').html('Show only projects with these tags');\n\t\t$('#btn-modal-cal-ctrl-submit').hide();\n\t\tbdy.html('');\n\t\tvar filteredTags = Cookies.getJSON('pws_filtered_tags');\t\n\n\t\tbdy.append('<ul id = \"filtered-tags-list\"></ul>');\n\t\tvar list = $('#filtered-tags-list');\n\t\t$.each(core.options.tags, function( index, tg ) {\n\t\t\tvar cid = 'tag-cb_'+tg.tag_id;\n\t\t\tlist.append('<li class=\"checkbox\" > <input class=\"tag-checkbox\" id=\"'+cid+'\" type=\"checkbox\" name=\"tag\" value=\"'+tg.id+'\" checked=\"checked\">'+tg.name+' </li>');\n\t\t\tif ( $.inArray(tg.tag_id, filteredTags) >= 0 ) {\n\t\t\t\t$('#'+cid).prop('checked', false);\n\t\t\t}\n\t\t});\n\n\t\t$('#filtered-tags-list li .tag-checkbox').on(' click ', function(e){\n\t\t\tvar nonCheckedId;\n\t\t\tvar clickedId = $(e.target).attr(\"id\").match(/\\d+$/);\n\t\t\tvar filteredList = [];\n\t\t\t$.each($('.tag-checkbox'), function( index, value ) {\n\t\t\t\tif ( ! $(value).is(':checked')  ){\n\t\t\t\t\tnonCheckedId = $(value).attr(\"id\").match(/\\d+$/);\n\t\t\t\t\tfilteredList.push( parseInt(nonCheckedId[0]));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tCookies.set('pws_filtered_tags', filteredList, {path:''});\n\t\t\tapplyTagFilter();\n\n\t\t});\n\n\t};\n\n\tvar applyTagFilter = function(){\n\n\t\tvar tFilter= Cookies.getJSON('pws_filtered_tags');\n\n\n\t\tvar projs = $('.cnt-project').not('.place-holder');\n\n\t\t$.each( projs, function( index, proj ) {\n\t\t\tvar pData = $(proj).data(\"scheduleRecord\");\n\n\t\t\tvar tagsToShow = _.difference(pData.tags, tFilter);\n\t\t\t//console.debug(tagsToShow);\n\n\t\t\tif(  _.isEmpty(tagsToShow) ){\n\t\t\t\t$(proj).css('visibility', 'hidden');\n\t\t\t}else{\n\t\t\t\t$(proj).css('visibility', 'visible');\n\t\t\t}\n\t\t});\n\n\t\tif ( _.isEmpty(tFilter) ) {\n\t\t\t$('#btn-filter-tags').removeClass('btn-warning').addClass('btn-success');\n\t\t\treturn;\n\t\t}\n\n\t\t$('#btn-filter-tags').removeClass('btn-success').addClass('btn-warning');\n\n\t};\n\n\tvar applyWorkerFilter = function(){\n\t\tvar wFilter= Cookies.getJSON('pws_filtered_workers');\n\n\n\t\t$.each( core.workers, function( index, wkr ) {\n\t\t\tif( $.inArray(wkr.id, wFilter) >= 0 ){\n\t\t\t\t$('#worker-row_'+wkr.id).hide();\n\t\t\t}else{\n\t\t\t\t$('#worker-row_'+wkr.id).show();\n\t\t\t}\n\t\t});\n\n\t\tif ( _.isEmpty(wFilter) ) {\n\t\t\t$('#btn-filter-workers').removeClass('btn-warning').addClass('btn-success');\n\t\t\treturn;\n\t\t}\n\n\t\t$('#btn-filter-workers').removeClass('btn-success').addClass('btn-warning');\n\n\t};\n\n\n\tvar rbTags = function(){\n\n\n\t\tvar html = '<li> <a href=\"#tags\"  id=\"btn-tags\" data-toggle=\"modal\" data-href=\"\" data-name=\"tags\" class=\"btn btn-info btn-xs\" >Tags</a></li>';\n\t\t$('#project-controls').append(html);\n\n\n\t\t$(\"#tags\").on(\"show.bs.modal\", function(e){\n\t\t\tvar jqxhr = $.ajax({\n\t\t\t\turl: \"/calendar/\"+core.config.calendarId+\"/schedule-element/\"+projectSelected.schedule_id+\"/tag/edit\",\n\t\t\t\tasync: true,\n\t\t\t\tmethod: \"GET\"\n\t\t\t} )\n\t\t\t.done(function(response) {\n\n\t\t\t\t$('#tags .modal-body').html('');\n\t\t\t\t$('#tags .modal-body').html(response);\n\t\t\t\trenderExistingTagsForEdit();\n\t\t\t\t$('#btn-add-tag').on(' click ', function(){\n\t\t\t\t\tvar tagId = $('#tag-select').val();\n\t\t\t\t\taddTag(tagId);\n\t\t\t\t});\n\t\t\t\n\t\t\t})\n\t\t\t.fail(function() {\n\t\t\t\talert( \"error fetching  edit tag data\" );\n\t\t\t});\n\t\t});\n\t};\n\n\tvar rbUpdate = function(rec){\n\t\t\t\t// Fill modal with content from link href\n\t\t$(\"#myModal\").on(\"show.bs.modal\", function(e) {\n\n\t\t\t//determin what to fetch\n\n\t\t\tvar target = $(e.target);\n\t\t\tvar link = $(e.relatedTarget);\n\t\t\tvar url = '/calendar/'+core.config.calendarId+'/schedule-element/'+rec.schedule_id+'/user-update';\n\t\t\tvar modalBody = $(this).find(\".modal-body\");\n\n\t\t\tvar jqxhr = $.ajax({\n\t\t\t\turl: url,\n\t\t\t\tasync: true,\n\t\t\t\t//dataType: \"json\",\n\t\t\t\t//data: {\"_token\":crfs,\"targetRecord\":scheduleRecord, \"updateFields\": fieldsObj},\n\t\t\t\tmethod: \"GET\"\n\t\t\t} )\n\t\t\t.done(function(response) {\n\t\t\t\tmodalBody.html(response).find( \"#scheduled-date-field\"  ).datepicker({dateFormat: \"yy-mm-dd\"});\n\n\t\t\t})\n\t\t\t.fail(function() {\n\t\t\t\talert( \"error\" );\n\t\t\t})\n\t\t\t.always(function() {\n\t\t\t\t//alert( \"complete\" );\n\t\t\t});\n\n\t\t\t$(this).find(\".modal-title\").html(\"Update Schedule Element\");\n\t\t});\n\t\tvar html = '<li> <a href=\"#myModal\"  data-toggle=\"modal\" data-href=\"\" data-name=\"Update\" class=\"btn btn-info btn-xs\" >Update</a></li>';\n\t\t$('#project-controls').append(html);\n\n\t};\n\n\tvar rbRemove = function(){\n\n\t\tvar html = '<li> <a href=\"#\" data-name=\"remove\" class=\"btn btn-info btn-xs btn-remove\" >Remove</a></li>';\n\t\t$('#project-controls').append(html);\n\n\t\t$(\".btn-remove\").on(\"click\", function(e) {\n\t\t\tvar cres = confirm('You are about to remove schedule element for ' + projectSelected.customer_name + '.  Continue?');\n\t\t\tif ( cres ) {\n\t\t\t\tvar jqxhr = $.ajax({\n\t\t\t\t\turl: \"/calendar/schedule-element/\"+projectSelected.schedule_id+\"/remove\",\n\t\t\t\t\tasync: true,\n\t\t\t\t\tmethod: \"GET\"\n\t\t\t\t} )\n\t\t\t\t.done(function(response) {\n\t\t\t\t\tvar wkr = core.workers[projectSelected.worker_id];\n\t\t\t\t\twkr.removeProjectFromPool(projectSelected.schedule_id);\n\t\t\t\t\trenderWorkerScheduleElements(projectSelected.worker_id, true);\n\t\t\t\t\tsetProjUnselected();\n\t\t\t\t})\n\t\t\t\t.fail(function() {\n\t\t\t\t\talert( \"error: unable to remove record!\" );\n\t\t\t\t})\n\t\t\t\t.always(function() {\n\t\t\t\t\t//alert( \"complete\" );\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n\n\tvar bindSelectedProjectDraggable = function(){\n\n\t\t$('#selected-proj-li').draggable( {\n\t\t\trevert : \"invalid\",\n\t\t\tscroll: true,\n\t\t\tsnap: \".proj-droppable\",\n\t\t\tsnapMode: \"inner\"\n\t\t});\n\n\t};\n\n\tvar bindDragDrop = function(workerId){\n\n\t\tvar projElements = $('#worker-row_'+workerId+' .proj-draggable');\n\t\tvar dayElements = $('#worker-row_'+workerId+' .proj-droppable');\n\n\t\tprojElements.draggable( {\n\t\t\trevert : \"invalid\",\n\t\t\tscroll: true,\n\t\t\tsnap: \".proj-droppable\",\n\t\t\tsnapMode: \"inner\"\n\t\t});\n\n\t\tdayElements.droppable({\n\t\t\tdrop: function(event,ui){\n\t\t\t\tvar parsedTargetId = parseWorkerDayId( $(this).attr(\"id\") );\n\t\t\t\tvar rec =  $(ui.draggable).data(\"scheduleRecord\");\n\t\t\t\tvar grabbedDraggableDay =  $(ui.draggable).attr(\"id\").match(/\\d+$/);\n\t\t\t\tvar targetDay;\n\n\n\n\t\t\t\t//when user dragges selected project from the top onto the schedule\n\t\t\t\t//this makes sure we done leave an element hanging in an odd space\n\t\t\t\tif ( $(ui.draggable).attr(\"id\") === \"selected-proj-li\"  ) {\n\t\t\t\t\tui.draggable.draggable('option', 'revert', true);\n\t\t\t\t}\n\n\t\t\t\t//if use grabs non-first day of schedule rec adjust the drop \n\t\t\t\t//start day accordingly\n\t\t\t\tif ( grabbedDraggableDay > 1 ) {\n\t\t\t\t\ttargetDay = parsedTargetId.day.subtract( parseInt(grabbedDraggableDay) - 1 , \"days\" );\n\t\t\t\t}else{\n\t\t\t\t\ttargetDay = parsedTargetId.day;\n\t\t\t\t}\n\n\t\t\t\ttargetDay.format(core.config.pwsDateFormat);\n\t\t\t\n\t\t\t\t// if target is not going to change dont hit the database\n\t\t\t\tif ( targetDay === rec.scheduled_date && parsedTargetId.workerId === rec.worker_id  ) {\n\t\t\t\t\tui.draggable.draggable('option', 'revert', true);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tvar updateFields = {\t\n\t\t\t\t\t\t\"scheduled_date\":parsedTargetId.day.format(core.config.pwsDateFormat),\n\t\t\t\t\t\t\"worker_id\":parsedTargetId.workerId\n\t\t\t\t};\n\n\t\t\t\tmoveScheduleRec( rec, updateFields );\n\t\t\t},\n\t\t\taccept: \".proj-draggable\",\n\t\t\thoverClass: \"drop-hover\",\n\t\t\tactiveClass: \"drop-active\"\n\t\t});\n\n\t\tprojElements.click(function(e){\n\t\t\t// user can click on other elements in the project div\n\t\t\t// make sure we catch it and get the appropriate id\n\n\t\t\tvar projEl;\n\n\t\t\tif ( e.target.nodeName === \"SPAN\" ) { projEl = $(e.target).parent(); }\n\t\t\tif ( e.target.nodeName === \"DIV\" ) { projEl = $(e.target); }\n\n\t\t\tvar projData = projEl.data(\"scheduleRecord\");\n\n\t\t\tupdateSelectedProject( projEl.data(\"scheduleRecord\") );\n\t\t\t\n\t\t});\n\n\t};\n\n\n\n\t// build all the controls that were dynamically built\n\tvar ctrlBind = function(){\n\n\t\t$(\"#cal-ctrl\").on(\"show.bs.modal\", function(e) {\n\n\t\t\tvar calCtrl = $('#cal-ctrl');\n\t\t\t\n\t\t\tvar dataName = $(e.relatedTarget).attr(\"data-name\");\n\t\t\t\n\t\t\tif ( dataName === \"add\" ) {\n\t\t\t\tfetchModalAddContent();\n\t\t\t}\n\n\t\t\tif ( dataName === \"filter-workers\" ) {\n\t\t\t\tbuildModalContentFilterWorkers();\n\t\t\t}\n\n\t\t\tif ( dataName === \"filter-tags\" ) {\n\t\t\t\tbuildModalContentFilterTags();\n\t\t\t}\n\n\t\t});\n\n\t\tvar modal = $('#myModal,#cal-ctrl, #tags');\n\n\t\tmodal.css('margin-left', ($(window).width() - modal.width()) / 2 );\n\n\t\tmodal.on('submit', function(e){\n\n\t\t\te.preventDefault();\n\n\t\t\tvar jqxhr = $.ajax({\n\t\t\t\turl: $(e.target).attr(\"action\"),\n\t\t\t\tasync: true,\n\t\t\t\tdata: $(e.target).serialize(),\n\t\t\t\tmethod: \"POST\"\n\t\t\t} )\n\t\t\t.done(function(response) {\n\t\t\t\tif ( _.isObject(response) ) {\n\t\t\t\t\tliveUpdateWorkerRows(projectSelected, response);\n\t\t\t\t\t$('.modal').modal('hide');\n\t\t\t\t\t$('#myModal, #cal-ctrl').find('.modal-body').html('');\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\talert( 'error - repsonse not object' );\n\t\t\t\t}\n\n\t\t\t})\n\t\t\t.fail(function(response) {\n\t\t\t\tif ( _.has(response, 'responseJSON') ){\n\t\t\t\t\t$.each(response.responseJSON, function( index, value ) {\n\t\t\t\t\t\t$('.modal-body').append('<h4 class=\"error\">error: '+index+'</h4');\n\t\t\t\t\t\t\t$.each(value, function( errindex, error ) {\n\t\t\t\t\t\t\t\t$('.modal-body').append('<p class=\"error\" >'+error+'</p>');\n\t\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\talert('error saving data!');\n\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t$('#btn-modal-submit').on('click', function(){\n\t\t\t$('#schedule-data-form').submit();\n\t\t});\n\n\t\t$('#btn-modal-cal-ctrl-submit').on('click', function(){\n\t\t\t$('#schedule-cal-ctrl-form').submit();\n\t\t});\n\n\t\t$('#cal-ctrl-back').click(function(e){\n\t\t\t//console.debug('nav back');\n\t\t\te.preventDefault();\n\t\t\tvar nBackward = core.config.navBackward;\n\n\t\t\tif ( core.config.calNavRootUrl  ) {\n\t\t\t\tvar momTargetDay = core.config.momCalStart.clone();\n\t\t\t\tmomTargetDay.subtract( core.config.navBackward, 'days' );\n\t\t\t\tcalNavRootUrl( momTargetDay );\n\t\t\t}\n\n\t\t\tnavCal( 'backward', nBackward  );\n\t\t});\n\n\t\t$('#cal-ctrl-forward').click(function(e){\n\t\t\t//console.debug('nav forward');\n\t\t\te.preventDefault();\n\t\t\tvar nForward = core.config.navForward;\n\t\t\tif ( core.config.calNavRootUrl  ) {\n\t\t\t\tvar momTargetDay = core.config.momCalStart.clone();\n\t\t\t\tmomTargetDay.add( core.config.navForward, 'days' );\n\t\t\t\tcalNavRootUrl( momTargetDay );\n\t\t\t}\n\t\t\tnavCal( 'forward', nForward  );\n\t\t});\n\n\n\n\n\t\t$(\"#cnt-worker-grids\").scroll(function () { \n\t\t\t$(\"#cnt-scroll-header\").scrollLeft($(\"#cnt-worker-grids\").scrollLeft());\n\t\t});\n\n\t\t// freeze user name containers in place\n\t\t$('#cnt-worker-grids').scroll(function(e) {\n\t\t\t\tvar pos = $('#cnt-worker-grids').scrollLeft();\n\t\t\t\t$(\".worker-name, #name-placeholder\").css({\n\t\t\t\t\t\tleft: pos\n\t\t\t\t});\n\t\t});\n\n\n\t\t// if a scroll bar is on the scrollable div adjus with width so the calendar days line up nicely\n\t\tvar div= document.getElementById('cnt-worker-grids'); // need real DOM Node, not jQuery wrapper\n\t\tvar hasVerticalScrollbar= div.scrollHeight>div.clientHeight;\n\t\tif ( hasVerticalScrollbar ){\n\t\t\t$('#hdr-row').append('<div class=\"accomodate-scrollbar\">&nbsp</div>');\n\t\t}\n\n\t\t//enable drag and drop\n\n\n\t};\n\n\tvar applyFilters = function(){\n\t\tapplyWorkerFilter();\n\t\tapplyTagFilter();\n\t};\n\n\treturn {\n\t\tapplyFilters:applyFilters,\n\t\tnavCal:navCal,\n\t\tclearWorkerDayDivs:clearWorkerDayDivs,\n\t\tclearWorkerScheduleElements:clearWorkerScheduleElements,\n\t\tbldGridHeader:bldGridHeader,\n\t\trenderPlaceHolder:renderPlaceHolder,\n\t\trenderWorkerProj:renderWorkerProj,\n\t\trenderWorkerRow:renderWorkerRow,\n\t\tbuildWorkerDays:buildWorkerDays,\n\t\tbuildWorkerDiv:buildWorkerDiv,\n\t\tsetTagStyles:setTagStyles,\n\t\tinitWorkerDivs:initWorkerDivs,\n\t\tinitScheduleRecords:initScheduleRecords,\n\t\tsetProjSelected:setProjSelected,\n\t\tsetProjUnselected:setProjUnselected,\n\t\tprojectSelected:projectSelected,\n\t\tupdateSelectedProjectDisplay:updateSelectedProjectDisplay,\n\t\tupdateSelectedProject:updateSelectedProject,\n\t\tctrlBind:ctrlBind,\n\t\trenderWorkerScheduleElements:renderWorkerScheduleElements\n  \t};\n\n};\n\n","/*global PWSSchedule, moment, _ */\nPWSSchedule.worker =  function(id, name, projectPool) {\n\t\"use strict\";\n\tvar rows = [];\n\tvar projects = projectPool;\n\t//var schRecPool = [];\n\t//var curentProj;\n\t//var lastAddedProj;\n\t\n\n\tvar getId = function(){\n\t\treturn id;\n\t};\n\n\tvar sortScheduleRecordsAZ = function(recs){\n\t\treturn recs.sort(function(a, b){\n\t\t\ta = new Date(a.scheduled_date);\n\t\t\tb = new Date(b.scheduled_date);\n\t\t\tif (a < b) { return -1; }\n\t\t\telse if (a > b) { return 1; }\n\t\t\telse { return 0; }\n\t\t});\n\t};\n\n\tvar sortScheduleRecordsJobLength = function(recs){\n\t\treturn recs.sort(function(a, b){\n\t\t\ta = a.job_length_days;\n\t\t\tb = b.job_length_days;\n\t\t\tif (a < b) { return -1; }\n\t\t\telse if (a > b) { return 1; }\n\t\t\telse { return 0; }\n\t\t});\n\t};\n\n\tvar buildRows = function(calStart, calRange){\n\t\t//reinit projects;\n\t\trows = [];\n\t\tprojects = projectPool;\n\t\t\n\t\t//clear rows and build new ones based on cal range\n\n\t\tcalStart = ( moment.isMoment( calStart ) ) ? calStart : moment( calStart );\n\n\t\tif ( ! _.isEmpty( projects ) ) {\n\t\t\tprojects = sortScheduleRecordsAZ(projects);\n\t\t}\n\n\t\tvar row;\n\t\twhile ( ! _.isEmpty( projects  ) ){\n\t\t\trow = getRowRecords( projects, calStart, calRange );\n\t\t\tif ( _.isEmpty(row) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcullProjects(row);\n\t\t\trows.push( row );\n\t\t}\n\t\treturn rows;\n\t};\n\n\n\tvar cullProjects = function(row){\n\t\tvar scheduleIds = [];\n\t\t$.each(row, function( index, value ) {\n\t\t\tscheduleIds.push( value.schedule_id );\n\t\t});\n\n\t\tprojects = projects.filter(function(v){\n\t\t\tif (  $.inArray( v.schedule_id, scheduleIds ) !== -1 ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t};\n\n\n\tvar getRowRecords = function(recs, calStart, calRange){\n\t\tvar lastDate = null;\n\t\tvar newRow = [];\n\n\t\tfor (var i = 0; i < recs.length; i++) { \n\n\t\t\tif ( typeof recs[i] === 'undefined' ) {\n\t\t\t\tthrow new Error('holy shit');\n\t\t\t}\n\n\t\t\t//if record is not within current rendered cal range just skip it\n\t\t\tif ( ! isRecInCalendarRange( recs[i], calStart, calRange )  )  { continue; }\n\t\t\t\n\t\t\tvar momNextStart = moment( recs[i].scheduled_date );\n\n\t\t\t// if its the first row pass just auto add the first record\n\t\t\tif ( lastDate === null ) { //first row pass\n\t\t\t\tnewRow.push( recs[i] );\n\t\t\t\tlastDate = moment ( recs[i].scheduled_date ).add( recs[i].job_length_days, \"days\"  );\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( momNextStart.isAfter( lastDate ) ) {\n\t\t\t\tnewRow.push( recs[i] );\n\t\t\t\tlastDate = moment ( recs[i].scheduled_date ).add( recs[i].job_length_days, \"days\"  );\n\t\t\t}\n\t\t}\n\t\treturn newRow;\n\t};\n\n\tvar isRecInCalendarRange = function(checkRecord, calStart, calRange){\n\t\tvar start = moment(  checkRecord.scheduled_date );\n\t\t//ensure this returns true if either its start or end date are true\n\t\tif ( checkRecord.job_length_days > 1 ) { //check end date as well\n\t\t\tvar end = start.clone().add( checkRecord.job_length_days, 'days' );\n\t\t\tif ( isDateInCalendarRange( start, calStart, calRange ) || isDateInCalendarRange( end, calStart, calRange ) ) { return true; }\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\tif ( isDateInCalendarRange( start, calStart, calRange ) ) { return true; }\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tvar isDateInCalendarRange = function(checkDate, calStart, calRange){\n\t\tcalStart = ( moment.isMoment( calStart ) ) ? calStart : moment( calStart );\n\t\tvar\tcalEnd = calStart.clone().add( calRange, 'days' );\n\t\tcheckDate =  ( moment.isMoment(checkDate) ) ? checkDate.clone() : moment( checkDate );\n\n\t\tif ( checkDate.isSameOrAfter( calStart  ) && checkDate.isSameOrBefore( calEnd  ) ) { return true; }\n\t\treturn false;\n\t};\n\n\tvar getName = function(){\n\t\treturn name;\n\t};\n\n\tvar removeProjectFromPool = function(scheduleId){\n\t\t$.each(projectPool, function( index, value ) {\n\t\t\tif ( scheduleId === value.schedule_id ) {\n\t\t\t\tprojectPool.splice(index,1);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t};\n\n\tvar addProjectToPool = function(rec){\n\t\tprojectPool.push(rec);\n\t};\n\n\n\treturn {\n\t\tid:id,\n\t\tremoveProjectFromPool:removeProjectFromPool,\n\t\taddProjectToPool:addProjectToPool,\n\t\tisDateInCalendarRange:isDateInCalendarRange,\n\t\tisRecInCalendarRange:isRecInCalendarRange,\n\t\tsortScheduleRecordsAZ:sortScheduleRecordsAZ,\n\t\tsortScheduleRecordsJobLength:sortScheduleRecordsJobLength,\n\t\tgetRowRecords:getRowRecords,\n\t\tname:name,\n\t\tgetId:getId,\n\t\tgetName:getName,\n\t\tbuildRows:buildRows,\n\t\trows:rows,\n\t\tprojects:projects\n\t};\n\n\n\n\n};\n",""],"sourceRoot":"/source/"}